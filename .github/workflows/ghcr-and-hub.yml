---
name: 'build images'
on:
  schedule:
    - cron: '22 4 * * *'
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io/bryopsida
  IMAGE_NAME: wireguard
jobs:
  build-images:
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6
        with:
          cosign-release: 'v1.4.0'
      # for multi arch container builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Setup Docker buildx
        id: buildx
        timeout-minutes: 4
        uses: docker/setup-buildx-action@f5bc16b105017f86f22b81bfbf9e8f025a70d3ca
      - name: Log into registry
        if: github.event_name != 'pull_request'
        timeout-minutes: 5
        uses: docker/login-action@21f251affc0769ccac8a1cf17e937592fb492337
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        timeout-minutes: 5
        uses: docker/metadata-action@59bc9ddfd5a31eb6f5b55e89b65578fe3bbba85e
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
      - name: Build Docker image
        id: build
        timeout-minutes: 25
        uses: docker/build-push-action@e27bcee4eb9e7b4bc168418e3364c4482120393a
        with:
          context: .
          load: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Get Short SHA
        id: short-sha
        run: |
          export SHORT_SHA=$(git rev-parse --short HEAD)
          echo "::set-output name=sha_short::$SHORT_SHA"
          echo "::set-output name=sha_tag::${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}:sha-$SHORT_SHA"
        
      - name: Scan image
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.short-sha.outputs.sha_tag }}
          format: 'sarif'
          output: 'scan-results.sarif'
      - name: Upload Container Scan SARIF report
        if: ${{ env.CODEQL_ENABLED }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'scan-results.sarif'
      - name: Export Container TAR
        timeout-minutes: 4
        run: |
          set -e
          set -x
          mkdir -p /tmp/artifacts
          docker save ${{ steps.short-sha.outputs.sha_tag }} -o /tmp/artifacts/image.tar
          gzip -c /tmp/artifacts/image.tar > /tmp/artifacts/image.tar.gz
      - name: Push image
        if: github.event_name != 'pull_request'
        id: push
        timeout-minutes: 60
        uses: docker/build-push-action@e27bcee4eb9e7b4bc168418e3364c4482120393a
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          load: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign --force --recursive ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}
      - name: Upload Container TAR
        if: ${{ github.event_name == 'pull_request' }}
        timeout-minutes: 4
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/artifacts/image.tar.gz
          name: image.tar.gz
          retention-days: 1
          if-no-files-found: error
